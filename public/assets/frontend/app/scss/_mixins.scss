@mixin transition($what: all, $time: 0.4s, $how: ease-in-out) {
    -webkit-transition: $what $time $how;
    -moz-transition: $what $time $how;
    -ms-transition: $what $time $how;
    -o-transition: $what $time $how;
    transition: $what $time $how;
}

@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
}

// Single side border-radius
@mixin border-top-radius($radius) {
    -webkit-border-top-right-radius: $radius;
    border-top-right-radius: $radius;
    -webkit-border-top-left-radius: $radius;
    border-top-left-radius: $radius;
}

@mixin border-right-radius($radius) {
    -webkit-border-bottom-right-radius: $radius;
    border-bottom-right-radius: $radius;
    -webkit-border-top-right-radius: $radius;
    border-top-right-radius: $radius;
}

@mixin border-bottom-radius($radius) {
    -webkit-border-bottom-right-radius: $radius;
    border-bottom-right-radius: $radius;
    -webkit-border-bottom-left-radius: $radius;
    border-bottom-left-radius: $radius;
}

@mixin border-left-radius($radius) {
    -webkit-border-bottom-left-radius: $radius;
    border-bottom-left-radius: $radius;
    -webkit-border-top-left-radius: $radius;
    border-top-left-radius: $radius;
}

@mixin box-shadow($shadow...) {
    -webkit-box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    box-shadow: $shadow;
}

/*
  $shadow-color: red;  // could also be a #F9F8F6 type color
  @include box-shadow(0 0px 12px rgba($shadow-color, .9));
*/

// For Opacity
@mixin opacity($value) {
    $IEValue: $value*100;
    opacity: $value;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$IEValue+")";
    filter: alpha(opacity=$IEValue);
}

// generic transform
@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}

// rotate
@mixin rotate ($deg) {
    @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
    @include transform(scale($scale));
}

// translate
@mixin translate ($x, $y) {
    @include transform(translate($x, $y));
}

// skew
@mixin skew ($x, $y) {
    @include transform(skew(#{$x}deg, #{$y}deg));
}

//transform origin
@mixin transform-origin ($origin) {
    moz-transform-origin: $origin;
    -o-transform-origin: $origin;
    -ms-transform-origin: $origin;
    -webkit-transform-origin: $origin;
    transform-origin: $origin;
}

//Clear
@mixin clear {
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin list-clear {
    margin: 0px;
    padding: 0px;
    list-style: none;
}



// Background

@mixin background ($position: center, $size: cover, $repeat: no-repeat) {
    background: {
        position: $position;
        size: $size;
        repeat: $repeat;
    }
}


@mixin heading {
    font-family: segoe-ui-semibold;
    color: $headings-color;
    margin-bottom: 10px;
}

@mixin heading-1 {
    @include heading;
    font-size: 40px;

}

@mixin heading-2 {
    @include heading;
    font-size: 32px;
}

@mixin heading-3 {
    @include heading;
    font-size: 30px;
}

@mixin heading-4 {
    @include heading;
    font-size: 22px;
}

@mixin heading-5 {
    @include heading;
    font-size: 18px;
}

@mixin heading-6 {
    @include heading;
    font-size: 16px;
}

// GRADIENT MIXIN 
@mixin gradient {
    background: linear-gradient(to right, rgba($primary, 0.95), rgba($secondary, 0.95));
}

// ABSOLUTE CENTER 
@mixin absoluteCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
@mixin segoe-medium {
    font-family: segoe-ui-medium;
}
@mixin segeo-semi{
    font-family: segoe-ui-semibold;
}
@mixin segeo-bold {
    font-family: segoe-ui-bold;
}